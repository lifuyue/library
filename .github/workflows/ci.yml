name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Prepare .env for CI
        run: |
          cat > .env.ci <<'EOF'
          DATABASE_URL=postgresql+psycopg2://csuser:password@postgres:5432/cslibrary
          ENVIRONMENT=production
          HOST=0.0.0.0
          PORT=8000
          POSTGRES_DB=cslibrary
          POSTGRES_USER=csuser
          POSTGRES_PASSWORD=password
          EOF

      - name: Build backend
        run: docker compose --env-file .env.ci build backend

      - name: Verify Python and deps
        run: |
          docker compose --env-file .env.ci run --rm backend python -c "import sys; print(sys.version)"
          docker compose --env-file .env.ci run --rm backend python -c "import psycopg2, sqlalchemy, alembic, uvicorn, gunicorn, bcrypt; from passlib.hash import bcrypt as _bcrypt; print('deps ok')"
          docker compose --env-file .env.ci run --rm backend python -m pip check

      - name: Start database
        run: docker compose --env-file .env.ci up -d postgres

      - name: Run migrations
        run: docker compose --env-file .env.ci run --rm backend alembic upgrade head

      - name: Start backend
        run: docker compose --env-file .env.ci up -d backend

      - name: Connectivity check
        run: docker compose --env-file .env.ci exec -T backend curl -sS -m 5 http://localhost:8000/healthz

      - name: Run tests
        run: docker compose --env-file .env.ci run --rm backend pytest -q

      - name: Tear down
        if: always()
        run: docker compose --env-file .env.ci down -v
