name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Compose config check
        run: docker compose --env-file .env.ci config > /dev/null

      - name: Build backend
        run: docker compose --env-file .env.ci build backend

      - name: Verify Python and deps
        run: |
          docker compose --env-file .env.ci run --rm backend python -c "import sys; print(sys.version)"
          docker compose --env-file .env.ci run --rm backend python -c "import psycopg2, sqlalchemy, alembic, uvicorn, gunicorn, bcrypt; from passlib.hash import bcrypt as _bcrypt; print('deps ok')"
          docker compose --env-file .env.ci run --rm backend python -m pip check

      - name: Start database
        run: docker compose --env-file .env.ci up -d postgres

      - name: Run migrations
        run: docker compose --env-file .env.ci run --rm backend alembic upgrade head

      - name: Start backend
        run: docker compose --env-file .env.ci up -d backend

      - name: Pre-check diagnostics
        run: |
          docker compose --env-file .env.ci ps
          docker compose --env-file .env.ci logs --no-color --tail=200 backend || true

      - name: Connectivity check (wait up to 30s)
        run: |
          docker compose --env-file .env.ci exec -T backend sh -lc '
            i=0
            until curl -fsS -m 5 http://localhost:8000/healthz; do
              i=$((i+1))
              if [ $i -ge 15 ]; then
                echo "Backend not ready after ~30s"
                exit 1
              fi
              echo "Waiting for backend... ($i/15)"
              sleep 2
            done
          '

      - name: Post-check diagnostics (on failure)
        if: failure()
        run: |
          docker compose --env-file .env.ci ps
          docker compose --env-file .env.ci logs --no-color --tail=300 backend || true
          docker compose --env-file .env.ci exec -T backend sh -lc "ps -ef | grep -E 'gunicorn|uvicorn' | grep -v grep || true"
          docker compose --env-file .env.ci exec -T backend sh -lc "command -v ss >/dev/null 2>&1 && ss -ltnp || (command -v netstat >/dev/null 2>&1 && netstat -ltnp) || true"

      - name: Run tests
        run: docker compose --env-file .env.ci run --rm backend pytest -q

      - name: Build frontend
        run: docker compose --env-file .env.ci build frontend

      - name: Frontend config check
        run: node scripts/check-frontend-config.js

      - name: Start backend
        run: docker compose --env-file .env.ci up -d backend

      - name: Connectivity check (backend exec)
        run: docker compose --env-file .env.ci exec -T backend curl -sS -m 5 http://localhost:8000/healthz

      - name: Tear down
        if: always()
        run: docker compose --env-file .env.ci down -v
