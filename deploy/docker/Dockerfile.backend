### 后端生产镜像 Dockerfile（多阶段更瘦身）

# 1) Builder：仅用于构建 wheels（启用 BuildKit pip 缓存）
FROM python:3.11-slim AS builder
ENV PIP_NO_CACHE_DIR=1 PYTHONDONTWRITEBYTECODE=1
WORKDIR /build
COPY backend/requirements.txt .
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install --upgrade pip wheel setuptools && \
    pip wheel --wheel-dir /wheels -r requirements.txt

# 2) Runtime：仅包含运行所需（使用 psycopg2-binary 无需 libpq-dev/gcc）
FROM python:3.11-slim AS runtime
ENV PYTHONUNBUFFERED=1 PYTHONDONTWRITEBYTECODE=1
WORKDIR /app
RUN apt-get update && apt-get install -y --no-install-recommends curl \
    && rm -rf /var/lib/apt/lists/*

# 仅从 wheels 安装依赖（无编译）
COPY --from=builder /wheels /wheels
RUN pip install --no-cache-dir /wheels/*

# 拷贝应用源码（含 alembic）
COPY backend/ /app/

# 安全：非 root 用户
RUN groupadd -r app && useradd -r -g app app && \
    mkdir -p /app/uploads /app/data && \
    chown -R app:app /app
USER app

EXPOSE 8000
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
  CMD sh -c "wget -qO- http://localhost:8000/healthz || curl -fsS http://localhost:8000/healthz"

# 生产启动：Alembic 迁移后启动（禁止 ORM 自动建表）
ENV APP_WORKERS=2
CMD ["bash","-c","alembic upgrade head && uvicorn main:app --host 0.0.0.0 --port 8000 --workers ${APP_WORKERS}"]
