services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cslibrary-backend
    env_file: .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
      ENVIRONMENT: ${ENVIRONMENT:-production}
      HOST: ${HOST:-0.0.0.0}
      PORT: ${PORT:-8000}
    volumes:
      - backend_uploads:/app/uploads
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/healthz"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - cslibrary-net
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: cslibrary-frontend
    env_file: .env
    environment:
      VITE_API_BASE: ${VITE_API_BASE:-}
      NODE_ENV: ${NODE_ENV:-production}
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - cslibrary-net
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost/"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    container_name: cslibrary-postgres
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - cslibrary-net

networks:
  cslibrary-net:

volumes:
  backend_uploads:
  db_data:
